name: "Release (beta)"

on:
  workflow_dispatch:

concurrency:
  group: "release-beta"
  cancel-in-progress: false

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - id: set-matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  release:
    needs:
      - nix-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.nix-matrix.outputs.matrix) }}
    name: release-${{ matrix.attr }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: Swatinem/rust-cache@v2
      - run: nix build ".?submodules=1#packages.${{ matrix.attr }}"
      - run: zip -r ${{ matrix.attr }}.zip result/bin
      - uses: actions/upload-artifact@v3
        with:
          path: ${{ matrix.attr }}.zip
          name: ${{ matrix.attr }}
          retention-days: 1

  create-pr:
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: peter-evans/create-pull-request@v6
        with:
          branch: beta
