name: Build Windows

on:
  workflow_call:
    inputs:
      channel:
        description: The channel to build.
        required: true
        type: string
      ref:
        description: The ref to build.
        required: true
        type: string

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        package: [unavi-app, unavi-server]
    name: x86_64-windows.${{ matrix.package }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          submodules: true

      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - run: cargo install cargo-component

      - name: Build package
        run: |
          cargo build -p ${{ matrix.package }} --release --target x86_64-pc-windows-msvc
          mv target/x86_64-pc-windows-msvc/release/*.exe result
        env:
          UNAVI_REGISTRY_DID: ${{ inputs.channel == 'stable' && 'app' || inputs.channel }}.unavi.xyz

      - run: Compress-Archive -Path result/* -DestinationPath x86_64-windows.${{ matrix.package }}.zip

      - uses: actions/upload-artifact@v4
        with:
          name: build-x86_64-windows.${{ matrix.package }}
          path: x86_64-windows.${{ matrix.package }}.zip
          retention-days: 1
