name: Build Nix

on:
  workflow_call:
    inputs:
      channel:
        description: The channel to build.
        required: true
        type: string
      ref:
        description: The ref to build.
        required: true
        type: string
      attr:
        description: Only build this attribute.
        required: false
        type: string

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - uses: DeterminateSystems/nix-installer-action@main

      - id: set-matrix
        run: |
          matrix=$(nix eval --json .#githubMatrix.matrix)

          if [ -n "${{ inputs.attr }}" ]; then
            matrix=$(echo $matrix | jq '{include: [.include[] | select(.attr == "${{ inputs.attr }}")]}')
          fi

          echo "Matrix: $matrix"
          echo matrix=$matrix >> $GITHUB_OUTPUT

  build-nix:
    needs: nix-matrix
    strategy:
      matrix: ${{ fromJSON(needs.nix-matrix.outputs.matrix) }}
    name: ${{ matrix.attr }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          submodules: true

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - run: nix build -L .?submodules=1#packages.${{ matrix.attr }}-${{ inputs.channel }}
      - run: |
          cp -rL result tmp
          chmod -R 755 tmp
          cd tmp
          zip -r ../${{ matrix.attr }}.zip .

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.attr }}
          path: ${{ matrix.attr }}.zip
          retention-days: 1
