name: "Build"

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-matrix:
    uses: ./.github/workflows/build-matrix.yml

  build:
    needs:
      - build-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.build-matrix.outputs.matrix) }}
    name: ${{ matrix.attr }}
    runs-on: ${{ matrix.os }}
    env:
      IS_WINDOWS: ${{ startsWith(matrix.attr, 'x86_64-windows') }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
          fetch-depth: 0

      - if: ${{ env.IS_WINDOWS == 'false' }}
        uses: DeterminateSystems/nix-installer-action@main
      - if: ${{ env.IS_WINDOWS == 'false' }}
        uses: DeterminateSystems/magic-nix-cache-action@main
      - if: ${{ env.IS_WINDOWS == 'false' }}
        run: nix build .?submodules=1#packages.${{ matrix.attr }}
      - if: ${{ env.IS_WINDOWS == 'false' }}
        run: zip -r ${{ matrix.attr }}.zip result/bin/*

      - if: ${{ env.IS_WINDOWS == 'true' }}
        uses: Swatinem/rust-cache@v2
      - if: ${{ env.IS_WINDOWS == 'true' }}
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - if: ${{ env.IS_WINDOWS == 'true' }}
        run: |
          cargo build -p ${{ matrix.package }} --release --target x86_64-pc-windows-msvc
          mkdir result
          mv target/x86_64-pc-windows-msvc/release/*.exe result
          cp -r assets result
      - if: ${{ env.IS_WINDOWS == 'true' }}
        run: Compress-Archive -Path result -DestinationPath ${{ matrix.attr }}.zip

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.attr }}
          path: ${{ matrix.attr }}.zip
          retention-days: 1
