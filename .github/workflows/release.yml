name: "Release"

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - id: set-matrix
        run: |
          matrix=$(nix eval --json .#githubActions.matrix)
          echo matrix=$matrix >> $GITHUB_OUTPUT

  build:
    needs:
      - nix-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.nix-matrix.outputs.matrix) }}
    name: ${{ matrix.attr }}
    runs-on: ${{ matrix.os }}
    env:
      IS_WINDOWS: ${{ startsWith(matrix.attr, 'x86_64-windows') }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
          fetch-depth: 0
      - uses: Swatinem/rust-cache@v2

      - name: Log IS_WINDOWS
        run: echo "IS_WINDOWS=$IS_WINDOWS"

      - if: ${{ ! env.IS_WINDOWS }}
        uses: DeterminateSystems/nix-installer-action@main
      - if: ${{ ! env.IS_WINDOWS }}
        uses: DeterminateSystems/magic-nix-cache-action@main
      - if: ${{ ! env.IS_WINDOWS }}
        run: nix build .?submodules=1#packages.${{ matrix.attr }}
      - if: ${{ ! env.IS_WINDOWS }}
        run: zip -r ${{ matrix.attr }}.zip result/bin

      - if: ${{ env.IS_WINDOWS }}
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - if: ${{ env.IS_WINDOWS }}
        run: |
          cargo build -p ${{ matrix.package }} --release --target x86_64-pc-windows-msvc
          mkdir -p result/bin
          mv target/x86_64-pc-windows-msvc/release result/bin
          cp -r assets result/bin
      - if: ${{ env.IS_WINDOWS }}
        run: Compress-Archive -Path result/bin -DestinationPath ${{ matrix.attr }}.zip

      - uses: svenstaro/upload-release-action@v2
        with:
          asset_name: ${{ matrix.attr }}-${{ inputs.version }}.zip
          file: ${{ matrix.attr }}.zip
          repo_token: ${{ github.token }}
          tag: ${{ inputs.version }}
