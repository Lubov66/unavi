name: "Release"

on:
  workflow_dispatch:
    inputs:
      increment:
        description: "Type of version increment."
        required: true
        type: choice
        options:
          - prerelease
          - preminor
          - stable

concurrency:
  group: "release"
  cancel-in-progress: false

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: semver
        uses: nguyenvukhang/semver-increment@v1
        with:
          increment: ${{ inputs.increment == 'stable' && 'patch' || inputs.increment }}
          identifier: "beta"
          version-file: "Cargo.toml"
          version-regex: '^version = "(.*)"'

      - uses: dtolnay/rust-toolchain@stable

      - name: Force Cargo.lock to update
        run: cargo update --workspace

      - name: Delete branch and tag if they exist
        run: |
          git push origin --delete release-v${{ steps.semver.outputs.version }} || echo "Branch doesn't exist"
          git tag -d v${{ steps.semver.outputs.version }} || echo "Tag doesn't exist"

      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "chore: bump ${{ steps.semver.outputs.version }}"
          new_branch: release-v${{ steps.semver.outputs.version }}
          tag: v${{ steps.semver.outputs.version }}

  build:
    needs: version
    uses: ./.github/workflows/build.yml
    with:
      ref: v${{ needs.version.outputs.version }}

  deploy:
    needs: build
    uses: ./.github/workflows/deploy.yml
    with:
      channel: ${{ inputs.increment == 'stable' && 'stable' || 'beta' }}
      ref: v${{ needs.version.outputs.version }}

  release:
    needs:
      - deploy
      - version
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: ${{ inputs.increment == 'stable' && 'stable' || 'beta' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: v${{ steps.version.outputs.version }}

      - name: Create target branch if it doesn't exist
        run: |
          git fetch origin ${{ env.TARGET_BRANCH }} || git checkout -b ${{ env.TARGET_BRANCH }}
          git push origin ${{ env.TARGET_BRANCH }} || echo "Branch already exists"

      - name: Merge version into main
        uses: everlytic/branch-merge@1.1.5
        with:
          github_token: ${{ github.token }}
          source_ref: v${{ steps.version.outputs.version }}
          target_branch: main

      - name: Merge version into target
        uses: everlytic/branch-merge@1.1.5
        with:
          github_token: ${{ github.token }}
          source_ref: v${{ steps.version.outputs.version }}
          target_branch: ${{ env.TARGET_BRANCH }}

      - name: Delete version branch
        run: git push origin --delete release-v${{ steps.version.outputs.version }}

      - uses: actions/download-artifact@v4
        with:
          pattern: "build-*"

      - name: Add version to build file names
        run: |
          echo Current directory contents:
          ls -la

          for dir in *; do
            cd $dir

            for file in *; do
              mv $file ../${file%.zip}-${{ needs.version.outputs.version }}.zip
            done

            cd ..
            rm -rf $dir
          done

          echo New directory contents:
          ls -la

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "*"
          generateReleaseNotes: true
          prerelease: ${{ contains(needs.version.output.version, 'beta') }}
          tag: v${{ needs.version.output.version }}
