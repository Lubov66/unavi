package unavi:ui;

world guest {
    import unavi:shapes/api;

    export button;
    export text;
}

world prelude {
  import button;
  import text;
}

interface button {
  use unavi:layout/container.{container};
  use wired:input/handler.{input-handler};

  // 3D interactable button.
  // Fills the space of its root container.
  resource button {
    constructor(root: container);

    root: func() -> container;

    // Returns `true` if the button is pressed down this frame.
    pressed: func() -> bool;
  }
}

interface text {
  use unavi:layout/container.{container};
  use wired:scene/mesh.{mesh};
  use wired:scene/node.{node};

  resource text {
    constructor(text: string);

    // Returns another reference to the same resource.
    ref: func() -> text;

    text: func() -> string;
    set-text: func(value: string);

    flat: func() -> bool;
    set-flat: func(value: bool);

    mesh: func() -> mesh;
  }

  // Dynamic text generation within the bounds of a container.
  resource text-box {
    constructor(root: container);

    root: func() -> container;
    text: func() -> text;
  }
}
